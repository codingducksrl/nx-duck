version: '3'
services:
<% if(lambda) { %>
  lambda:
    build:
        context: .
        dockerfile: Dockerfile
    platform: linux/arm64
    command:
        -   "lambdas.lambda.main.lambdaHandler"
    ports:
        - "9000:8080"
    networks:
      - nest
<% } %>
<% if(mariadb) { %>
  mariadb:
    image: 'mariadb:10'
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - 'nest-db:/var/lib/mysql'
      - './docker/mariadb.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    networks:
      - nest
<% } %>
<% if(mongodb) { %>
  mongo:
    image: mongo
    command: --replSet rs0
    ports:
      - '27017:27017'
    environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_USER: ${DB_USERNAME}
      MONGO_INITDB_PWD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_DATABASE}
    volumes:
      - 'nest-db:/data/db'
      - './docker/mongo.sh:/docker-entrypoint-initdb.d/init.sh'
    networks:
      - nest
<% } %>
<% if(redis) { %>
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'nest-redis:/data'
    networks:
      - nest
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s
<% } %>
<% if(mailpit) { %>
  mailpit:
    image: 'axllent/mailpit:latest'
    ports:
      - '${FORWARD_MAILPIT_PORT:-1025}:1025'
      - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
    networks:
      - nest
<% } %>

networks:
  nest:
    driver: bridge

<% if(db || redis) { %>

volumes:
<% if(db) { %>
  nest-db:
    driver: local
<% } %>
<% if(redis) { %>
  nest-redis:
    driver: local
<% } %>

<% } %>
